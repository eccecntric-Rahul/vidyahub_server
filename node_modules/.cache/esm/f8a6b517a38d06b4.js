let studentModel,moment;_a38‍.x([["default",()=>_a38‍.o],["getStudent",()=>getStudent]]);_a38‍.w("../model/studentModel",[["default",["studentModel"],function(v){studentModel=v}]]);_a38‍.w("moment",[["default",["moment"],function(v){moment=v}]]);

const search=async (req,res)=>{

    // const startDate=moment(req.fields.startDay).startOf('day');
    // const endDate = moment(req.fields.endDay).endOf('day');
    try{
        if(req.fields.name&&req.fields.day){
           const searchRes= await studentModel.find({name:req.fields.name,createdAt:req.fields.day}).exec();
                _a38‍.g.console.log(searchRes);
             if(searchRes.length==0){return res.send(`There is no record with this name ${req.fields.name} on ${req.fields.day}`) ; } 
                
             res.status(200).send(searchRes);
            }
        else if(req.fields.name){
        const searchRes= await studentModel.find({name:req.fields.name}).exec();
                _a38‍.g.console.log(searchRes);
            
                if(searchRes.length==0){return res.send(`There is no record with this name ${req.fields.name}`); }
                res.status(200).send(searchRes);
            
        }
        else if(req.fields.day){
        const searchRes= await studentModel.find({createdAt:req.fields.day}).exec();
            _a38‍.g.console.log(searchRes);
            if(searchRes.length==0){return res.send(`There is no record on ${req.fields.day}`) ;}  
            
            res.status(200).send(searchRes);
            
        }
    }catch(err){
        _a38‍.g.console.log(err);
    }
}

_a38‍.d(search);

const getStudent= async(req,res)=>{
    try{
        const searchResult = await studentModel.findById(req.params.id);
        res.send(searchResult);
    }catch(err){
        _a38‍.g.console.log(err);
    }
}

